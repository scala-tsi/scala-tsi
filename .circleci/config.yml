version: 2.1
jobs:
  build:
    parameters:
      scala-version:
        type: string
    working_directory: ~/scala-tsi
    docker:
      - image: cimg/openjdk:8.0
    steps:
      - checkout

      - restore_cache:
          keys:
            - scala-tsi-<< parameters.scala-version >>-{{ checksum "project/plugins.sbt" }}-{{ checksum "build.sbt" }}
            - scala-tsi-<< parameters.scala-version >>-2

      - run:
          name: Compile
          command: |
            sbt -batch ++"<< parameters.scala-version >>.x" \
              compile \
              Test/compile \
              sbt-scala-tsi/compile \
              sbt-scala-tsi/Test/compile \
              exit
      - save_cache:
          key:  scala-tsi-<< parameters.scala-version >>-{{ checksum "project/plugins.sbt" }}-{{ checksum "build.sbt" }}
          paths:
            - target/resolution-cache
            - target/streams
            - project/target/resolution-cache
            - project/target/streams
            - ~/.sbt
            - ~/.cache

      - save_cache:
          # Change the number to switch to a cache with up-to-date dependencies
          key: scala-tsi-<< parameters.scala-version >>-2
          paths:
            - ~/.sbt
            - ~/.cache

      - run:
          name: Check formatting
          command:
            sbt -batch ++"<< parameters.scala-version >>.x" scalafmtSbtCheck scalafmtCheckAll exit

      - run:
          name: Test
          command:
            sbt -batch ++"<< parameters.scala-version >>.x" test scala-tsi-macros/test exit

      - run:
          name: Publish locally
          command: |
            set -x
            if [ -z "$CIRCLE_PR_USERNAME" ]; then
              gpg --batch --yes --import .circleci/circleci.key.asc
              sbt -batch ++"<< parameters.scala-version >>.x" publishLocalSigned sbt-scala-tsi/publishLocalSigned
            else
              # On forked PR, do an unsigned publish
              sbt -batch ++"<< parameters.scala-version >>.x" publishLocal sbt-scala-tsi/publishLocal
            fi

      - run:
          name: Run sbt-scala-tsi scripted tests
          command: |
            # These tests can be enabled on Scala 3 once all features are supported there
            if [ "<< parameters.scala-version >>" = "3" ]; then
              exit 0
            fi
            SCALAV=$(sbt --no-colors -error ++"<< parameters.scala-version >>.x" "print scalaVersion" | xargs)
            sbt -batch -Dscala.version="$SCALAV" ++"<< parameters.scala-version >>.x" sbt-scala-tsi/scripted

      - store_test_results:
          path: target/test-reports

      - run:
          name: Check, test and generate example project
          command: |
            VERSION=$(cd ../ && sbt --no-colors -error "print version" | xargs)
            SCALAV=$(cd ../ && sbt --no-colors -error ++"<< parameters.scala-version >>.x" "print scalaVersion" | xargs)
            sbt -batch -Dplugin.version="$VERSION" -Dscala.version="$SCALAV" \
              test \
              generateTypescript \
              scalafmtSbtCheck \
              scalafmtCheckAll \
              exit
          working_directory: example

      - run:
          # This is also done with sbt-scala-tsi/scripted, but that is a little easier to accidentally disable than this
          name: Check example project output
          command: diff model.ts expected_model.ts
          working_directory: example
          
      - store_test_results:
          path: example/target/test-reports

      - store_artifacts:
          path: example/model.ts

  publish:
    working_directory: ~/scala-tsi
    docker:
      - image: circleci/openjdk:8
    steps:
      - checkout

      - restore_cache:
          keys:
            - scala-tsi-2.13-{{ checksum "project/plugins.sbt" }}-{{ checksum "build.sbt" }}

      - run:
          command:
            gpg --batch --yes --import .circleci/circleci.key.asc
            sbt -batch +publishSigned +sbt-scala-tsi/publishSigned

      # releases everything from com.scala-tsi, look into releasing only this project
      - run:
          command:
            sbt -batch "sonatypeReleaseAll com.scalatsi"

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build:
          matrix:
            parameters:
              scala-version:
                - "2.13"
                - "3"
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - publish:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/ # Only run for tagged builds
            tags:
              only: /[0-9].*/ # x.y.z version has that tag name
