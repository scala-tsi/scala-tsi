version: 2.1
jobs:
  build:
    working_directory: ~/scala-tsi
    docker:
      - image: circleci/openjdk:8
    steps:
      - checkout

      - restore_cache:
          keys:
            - scala-tsi-{{ checksum "project/plugins.sbt" }}-{{ checksum "build.sbt" }}
            - scala-tsi-7

      - run:
          name: Compile and test for 2.13
          command: |
            scalav=$(sbt --no-colors --error "print scala213Version" | xargs)
            sbt -batch ++"$scalav" compile Test/compile sbt-scala-tsi/compile sbt-scala-tsi/Test/compile exit

      - run:
          name: Compile and test for 2.12
          command: |
            scalav=$(sbt --no-colors --error "print scala212Version" | xargs)
            sbt -batch ++"$scalav" compile Test/compile sbt-scala-tsi/compile sbt-scala-tsi/Test/compile exit

      - save_cache:
          key:  scala-tsi-{{ checksum "project/plugins.sbt" }}-{{ checksum "build.sbt" }}
          paths:
            - target/resolution-cache
            - target/streams
            - project/target/resolution-cache
            - project/target/streams
            - ~/.sbt
            - ~/.cache

      - save_cache:
        # Changing this key/incrementing the number at the end is the only way to remove old dependencies and/or generate a more up-to-date cache
          key: scala-tsi-6
          paths:
            - ~/.sbt
            - ~/.cache

      - run:
          name: Check formatting
          command:
            sbt scalafmtSbtCheck scalafmtCheckAll exit

      - run:
          name: "Run scala-tsi tests"
          command:
            sbt test scala-tsi-macros/test exit

      - run:
          name: "Run sbt-scala-tsi scripted tests"
          command:
            sbt sbt-scala-tsi/scripted

      - store_test_results:
          path: target/test-reports

      - run:
          name: Publish locally
          command: |
            set -x
            if [ -z "$CIRCLE_PR_USERNAME" ]; then
              sbt -batch publishLocalSigned sbt-scala-tsi/publishLocalSigned
            else
              # On forked PR, do an unsigned publish
              sbt -batch publishLocal sbt-scala-tsi/publishLocal
            fi

      - run:
          name: "test and generate example project"
          command: |
            VERSION=$(cd ../ && sbt --no-colors --error "print version" | xargs)
            sbt -batch -Dplugin.version="$VERSION" test generateTypescript scalafmtSbtCheck scalafmtCheckAll exit
          working_directory: example

      - run:
          # This is also done with sbt-scala-tsi/scripted, but that it a little easier to accidentally disable than this
          name: "Check example project output"
          command: diff model.ts expected_model.ts
          working_directory: example
          
      - store_test_results:
          path: example/target/test-reports

      - store_artifacts:
          path: example/model.ts

      - run:
          name: "Publish under new name"
          command: |
            test -d ~/.ivy2/local/com.scalatsi/sbt-scala-tsi
            test -d ~/.ivy2/local/com.scalatsi/scala-tsi_2.13

  publish:
    working_directory: ~/scala-tsi
    docker:
      - image: circleci/openjdk:8
    steps:
      - checkout

      - restore_cache:
          keys:
            - scala-tsi-{{ checksum "project/plugins.sbt" }}-{{ checksum "build.sbt" }}
            - scala-tsi-6

      - run:
          command:
            sbt -batch +publishSigned +sbt-scala-tsi/publishSigned

      # releases everything from com.scala-tsi, look into releasing only this project
      - run:
          command:
            sbt -batch "sonatypeReleaseAll com.scalatsi"

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build:
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - publish:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/ # Only run for tagged builds
            tags:
              only: /[0-9].*/ # x.y.z version has that tag name
